# Hibernate provided validators
validator.assertFalse=assertion failed
validator.assertTrue=assertion failed
validator.future=(fieldName) must be a future date
validator.length=(fieldName) length must be between {min} and {max}
validator.max=(fieldName) must be less than or equal to {value}
validator.min=(fieldName) must be greater than or equal to {value}
validator.notNull=(fieldName) must be set
validator.past=(fieldName) must be a past date
validator.pattern=(fieldName) must match "{regex}".
validator.range=(fieldName) must be between {min} and {max}
validator.size=(fieldName) size must be between {min} and {max}
validator.email=(fieldName) is not a well-formed email address

#
# Custom Hibernate validators
#
#@NotEmpty -- Method, Field Validator
validator.notEmpty=(fieldName) must be set
validator.notEmpty.collection=At least one (fieldName) must be set
#@Curatable -- Type validator
validator.curatable=Duplicates may only be specified when status is NULLIFIED
#@VaildResearchOrganizationTypeWithFundingMechanism -- Type validator
validator.vaildResearchOrganizationTypeWithFundingMechanism=Invalid funding mechanism for provided research organization type
#@UniquePlayerScoper -- Type validator
validator.uniquePlayerScoper={article} {friendlyName} already exists with the same Affiliated Person and Organization, please choose a different affiliation
#OrganizationalContact -- Type validators
validator.uniqueOrganizationalContactTitleScoperType=An Organizational Contact already exists with the same Title and Type, please choose another
validator.uniqueOrganizationalContactPlayerScoperType=An Organizational Contact already exists with the same Person and Type, please choose another
validator.requiredOrganizationalContactTitleOrPerson=Title or Affiliated Person must be set
#@ValidStateCountry -- Type validator
validator.validStateCountry=Invalid State or Province for Country
#@ValidZip -- Type validator
validator.validZip=US, Canadian, and Australian addresses must include zip
#@UniqueResearchOrganization -- Type validator
validator.uniqueResearchOrganization=Organization already has a Research Organization of this type and funding mechanism
#@UniqueOversightCommittee -- Type validator
validator.uniqueOversightCommittee=Organization already has an Oversight Committee of this type
#@UniquePlayerScoperIdentifier -- Type validator
validator.uniquePlayerScoperIdentifier=Identifier already assigned
#@ResearchOrganizationTypeCode -- Type validator
validator.researchOrganizationTypeCode=Type code is required for this status.
#@PhoneNotEmptyValidator -- Type validator
validator.phoneNotEmptyValidator=Phone number is required for this status.
validator.phoneOrEmailRequired=Either a phone number or an email address is required.
#@NotEmptyIiRoot -- Method, Field Validator
validator.notEmptyIiRoot=(fieldName) Root must be set
#@NotEmptyIiExtension -- Method, Field Validator
validator.notEmptyIiExtension=(fieldName) Extension must be set
#@UniqueOrganizationRelationship
validator.uniqueOrganizationRelationship=Two organization should only have one Active relationship (e.g. no endDate) within a family
#@UniqueFamilyOrganizationRelationship
validator.uniqueFamilyOrganizationRelationship=An active family organization relationship already exists for this organization.

# Custom Messages
validator.phone=(fieldName) is not a well-formed phone number
validator.url=(fieldName) is not well formed
#@OrderedDate
validator.orderedDate={startFieldName} must be before {endFieldName}.
#@PastOrCurrentDate
validator.pastOrCurrentDate=(fieldName) must not be in the future.
#@InvalidStartDate
validator.invalidStartDate=Invalid date range based on family relationships.
