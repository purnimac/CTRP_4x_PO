connect

/subsystem=transactions:write-attribute(name=default-timeout,value=600)

/subsystem=web/virtual-server=default-host/access-log=configuration:add
/subsystem=web/virtual-server=default-host/access-log=configuration:write-attribute(name="pattern",value="%h %l %u %t \"%r\" %q %s %B %S %T")
/subsystem=web/virtual-server=default-host/access-log=configuration/directory=configuration:add
/subsystem=web/virtual-server=default-host/access-log=configuration/directory=configuration:write-attribute(name="path",value="./")
/subsystem=web/virtual-server=default-host/access-log=configuration/directory=configuration:write-attribute(name="relative-to",value="jboss.server.log.dir")

/system-property=org.apache.tomcat.util.http.Parameters.MAX_COUNT:add(value="-1")
        
/subsystem=infinispan/cache-container=security:add(default-cache=auth-cache)
/subsystem=infinispan/cache-container=security/local-cache=auth-cache:add(batching=true)
/subsystem=infinispan/cache-container=security/local-cache=auth-cache/expiration=EXPIRATION:add(lifespan=60000)
/subsystem=security/security-domain=po:write-attribute(name=cache-type,value="infinispan")
/subsystem=security/security-domain=po/authentication=classic:remove() {allow-resource-service-restart=true}
/subsystem=security/security-domain=po/authentication=classic:add( \
    login-modules=[ \   
        { \
            "code" => "gov.nih.nci.coppa.util.NullPasswordStackingLoginModule", \
            "flag" => "optional", \
            "module" => "deployment.po.ear", \
            "module-options" => [ \
                ("password-stacking"=>"useFirstPass") \                
            ] \
        }, \    
        {\  
            "code" => "com.fiveamsolutions.nci.commons.authentication.CommonsGridLoginModule",\ 
            "flag" => "optional",\  
            "module" => "deployment.po.ear",\   
            "module-options" => {\  
                "gridServicePrincipal" => "@pogrid-3.2.jndi.principal@",\   
                "gridServiceCredential" => "@pogrid-3.2.jndi.credentials.encrypted@",\  
                "gridServicePrincipalSeparator" => "||"\    
            }\  
        },\ 
        {\  
            "code" => "com.fiveamsolutions.nci.commons.authentication.CommonsDBLoginModule",\   
            "flag" => "optional",\  
            "module" => "deployment.po.ear",\   
            "module-options" => {\  
                "driver" => "org.postgresql.Driver",\   
                "url" => "jdbc:postgresql://@database.server@:@database.port@/@database.name@",\    
                "user" => "@database.user@",\   
                "passwd" => "@database.password@",\ 
                "query" => "SELECT * FROM csm_user WHERE login_name=? and password=?",\ 
                "encryption-enabled" => "YES"\  
            }\  
        },\ 
        { \
            "code" => "Database", \
            "flag" => "required", \
            "module-options" => [ \
                ("password-stacking"=>"useFirstPass"), \
                ("dsJndiName"=>"java:jboss/datasources/po-xa-ds"), \
                ("rolesQuery" => "SELECT cg.group_name, 'Roles' FROM csm_group cg, csm_user_group cug, csm_user cu WHERE cg.group_id = cug.group_id AND cug.user_id = cu.user_id AND cu.login_name = ?") \
            ] \
        } \     
    ] \
) {allow-resource-service-restart=true}


if (outcome == success) of /subsystem=logging/logger=org.hornetq.core.server:read-resource
	/subsystem=logging/logger=org.hornetq.core.server:remove
end-if
if (outcome == success) of /subsystem=logging/periodic-rotating-file-handler=HORNETQ:read-resource
	/subsystem=logging/periodic-rotating-file-handler=HORNETQ:remove
end-if

/subsystem=logging/periodic-rotating-file-handler=HORNETQ:add(file={"path"=>"hornetq.log", "relative-to"=>"jboss.server.log.dir"},suffix=".yyyy-MM-dd")
/subsystem=logging/periodic-rotating-file-handler=HORNETQ:change-log-level(level="DEBUG")
/subsystem=logging/periodic-rotating-file-handler=HORNETQ:write-attribute(name="append", value="true")
/subsystem=logging/periodic-rotating-file-handler=HORNETQ:write-attribute(name="autoflush", value="true")
/subsystem=logging/periodic-rotating-file-handler=HORNETQ:write-attribute(name="formatter", value="%d{HH:mm:ss,SSS} %s%E%n")
/subsystem=logging/periodic-rotating-file-handler=HORNETQ:write-attribute(name="suffix", value=".yyyy-MM-dd")
/subsystem=logging/logger=org.hornetq.core.server:add
/subsystem=logging/logger=org.hornetq.core.server:write-attribute(name="level", value="DEBUG")
/subsystem=logging/logger=org.hornetq.core.server:assign-handler(name="HORNETQ")
/subsystem=logging/logger=org.hornetq.core.server:write-attribute(name="use-parent-handlers", value="false")


# Direct Web Service Access logging into a separate log file.
if (outcome == success) of /subsystem=logging/logger=WebServiceAccessLog:read-resource
	/subsystem=logging/logger=WebServiceAccessLog:remove
end-if
if (outcome == success) of /subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:read-resource
	/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:remove
end-if

/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:add(file={"path"=>"WebServiceAccessLog.log", "relative-to"=>"jboss.server.log.dir"},suffix=".yyyy-MM-dd")
/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:change-log-level(level="INFO")
/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:write-attribute(name="append", value="true")
/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:write-attribute(name="autoflush", value="true")
/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:write-attribute(name="formatter", value="%d{HH:mm:ss,SSS} %s%E%n")
/subsystem=logging/periodic-rotating-file-handler=WebServiceAccessLog:write-attribute(name="suffix", value=".yyyy-MM-dd")
/subsystem=logging/logger=WebServiceAccessLog:add
/subsystem=logging/logger=WebServiceAccessLog:write-attribute(name="level", value="INFO")
/subsystem=logging/logger=WebServiceAccessLog:assign-handler(name="WebServiceAccessLog")
/subsystem=logging/logger=WebServiceAccessLog:write-attribute(name="use-parent-handlers", value="false")




if (outcome == success) of /subsystem=logging/logger=gov.nih.nci.coppa.services.ldap:read-resource
	/subsystem=logging/logger=gov.nih.nci.coppa.services.ldap:remove
end-if
if (outcome == success) of /subsystem=logging/periodic-rotating-file-handler=LDAP:read-resource
	/subsystem=logging/periodic-rotating-file-handler=LDAP:remove
end-if

/subsystem=logging/periodic-rotating-file-handler=LDAP:add(file={"path"=>"ldap.log", "relative-to"=>"jboss.server.log.dir"},suffix=".yyyy-MM-dd")
/subsystem=logging/periodic-rotating-file-handler=LDAP:change-log-level(level="INFO")
/subsystem=logging/periodic-rotating-file-handler=LDAP:write-attribute(name="append", value="true")
/subsystem=logging/periodic-rotating-file-handler=LDAP:write-attribute(name="autoflush", value="true")
/subsystem=logging/periodic-rotating-file-handler=LDAP:write-attribute(name="formatter", value="%d{HH:mm:ss,SSS} %s%E%n")
/subsystem=logging/periodic-rotating-file-handler=LDAP:write-attribute(name="suffix", value=".yyyy-MM-dd")
/subsystem=logging/logger=gov.nih.nci.coppa.services.ldap:add
/subsystem=logging/logger=gov.nih.nci.coppa.services.ldap:write-attribute(name="level", value="INFO")
/subsystem=logging/logger=gov.nih.nci.coppa.services.ldap:assign-handler(name="LDAP")
/subsystem=logging/logger=gov.nih.nci.coppa.services.ldap:write-attribute(name="use-parent-handlers", value="false")


reload

if (outcome == success) of /subsystem=datasources/xa-data-source=po-xa-ds:read-resource
	xa-data-source remove --name=po-xa-ds
end-if
if (outcome == success) of /subsystem=logging/logger=stdout:read-resource
	/subsystem=logging/logger=stdout:remove
end-if

xa-data-source add \
     --name=po-xa-ds \
     --driver-name=postgresql \
     --jndi-name=java:jboss/datasources/po-xa-ds \
     --user-name=@database.user@ \
     --password=@database.password@ \    
     --use-ccm=false \
     --max-pool-size=30 \     
	 --exception-sorter-class-name="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter" \     
	 --valid-connection-checker-class-name="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker" \     
	 --xa-datasource-class="org.postgresql.xa.PGXADataSource" \     
     --new-connection-sql="select current_timestamp"
/subsystem=datasources/xa-data-source=po-xa-ds/xa-datasource-properties=ServerName:add(value=@database.server@)
/subsystem=datasources/xa-data-source=po-xa-ds/xa-datasource-properties=PortNumber:add(value=@database.port@)
/subsystem=datasources/xa-data-source=po-xa-ds/xa-datasource-properties=DatabaseName:add(value=@database.name@)

xa-data-source enable --name=po-xa-ds

/subsystem=logging/logger=stdout:add(level=@app.log.level@)
/subsystem=logging/root-logger=ROOT:change-root-log-level(level=@app.log.level@)
/subsystem=logging/root-logger=ROOT:remove-handler(name=CONSOLE)